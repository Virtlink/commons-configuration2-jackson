plugins {
    id "java"
    id "idea"
    id "eclipse"
    id "maven-publish"
    id "com.jfrog.bintray" version "1.5"
}


sourceCompatibility = 1.8
targetCompatibility = 1.8


configurations {
    provided
}


repositories {
    mavenCentral()
    maven {
        url "https://repository.apache.org/content/repositories/snapshots/"
    }
}


dependencies {
    compile 'org.apache.commons:commons-configuration2:2.0-alpha1-SNAPSHOT'
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.0'

    provided 'com.google.code.findbugs:findbugs:3.0.1'

    testCompile 'junit:junit:4.12'
    testCompile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.6.0'
}


sourceSets.main.compileClasspath += configurations.provided
idea.module.scopes.PROVIDED.plus += [configurations.provided]
eclipse.classpath.plusConfigurations += configurations.provided


task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


def pomConfig = {
    scm {
        url scm_url
        connection properties['scm_connection']
        developerConnection properties['scm_developer_connection']
    }
    licenses {
        license {
            name license_name
            url properties['license_url']
            distribution properties['license_distribution']
        }
    }
    developers {
        developer {
            name developer_name
            id properties['developer_id']
            email properties['developer_email']
        }
    }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.appendNode 'name', project_name
                root.appendNode 'description', project.properties['project_description']
                root.appendNode 'url', project.properties['project_url']
                root.appendNode 'inceptionYear', project.properties['project_inceptionyear']
                root.children().last() + pomConfig
            }
        }
    }
}


bintray {
	user = project.properties['bintray_username']
	key = project.properties['bintray_apikey']
	publications = ['mavenJava']
	publish = true
	pkg {
		name = project.name
		desc = project.properties['project_description']
		websiteUrl = project.properties['project_url']
		issueTrackerUrl = project.properties['project_issues']
		vcsUrl = project.properties['vcs_url']
		licenses = [license_name]
		repo = bintray_repo
		publicDownloadNumbers = true
		version {
			name = project.version
			desc = project.properties['project_description']
			released  = new Date()
			vcsTag = hasProperty('vcs_tag') ? properties['vcs_tag'] : System.getenv('TRAVIS_TAG')
			gpg {
				sign = project.hasProperty('gpg_passphrase')
				passphrase = project.properties['gpg_passphrase']
			}
		}
	}
}
